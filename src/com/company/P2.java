package com.company;

import service.Solution;

public class P2 implements Solution {

    public static void main(String[] args) {
                /*
        Even Fibonacci numbers
        Problem 2
        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
         */
        System.out.println( new P2().run() );
    }

    @Override
    public String run() {
//        int sum = 0;
//        int x = 1;  // Represents the current Fibonacci number being processed
//        int y = 2;  // Represents the next Fibonacci number in the sequence
//        while (x <= 10) {
//            if (x % 2 == 0)
//                sum += x;
//            int z = x + y;
//            x = y;
//            y = z;
//        }
//        System.out.println(Integer.toString(sum));

        //Betere oplossing zonder if statement in de while loop
        int b = 1;
        int c = 2, d;
        long sum = 0;

        while(c < 4000000) {
            sum += c;
            //0x01 is een hexadecimale getal dat gelijk staat met het getal 1
            d = b+(c<<0x01);
            c = d+b+c;
            b = d;
        }
        //4613732
        return String.valueOf(sum);
    }
}
